<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.2.xsd">

		<http auto-config="true" > <!-- 20160217 use-expressions="true" access-decision-manager-ref="UnanimouseBased" 로 접근 권한 타입(인증,인가) 변경 -->
			<!-- 20160217 ROLE_USER ->  ROLE_BASIC로 변경
			<intercept-url pattern="/favicon.ico"	access="IS_AUTHENTICATED_ANONYMOUSLY" />
			<intercept-url pattern="/rsc/**"		access="IS_AUTHENTICATED_ANONYMOUSLY" />
			<intercept-url pattern="/dev/**"		access="IS_AUTHENTICATED_ANONYMOUSLY" /> 
			<intercept-url pattern="/api/**"		access="IS_AUTHENTICATED_ANONYMOUSLY" />
			<intercept-url pattern="/test/**"		access="IS_AUTHENTICATED_ANONYMOUSLY" />
			<intercept-url pattern="/main/login/*"	access="IS_AUTHENTICATED_ANONYMOUSLY" />
			<intercept-url pattern="/admin/**" 		access="ROLE_ADMIN" />
			<intercept-url pattern="/**" 			access="ROLE_USER" />
			<intercept-url pattern="/**" 			access="ROLE_BASIC" /> 
			 -->
			

			<form-login login-page="/main/login/login"
				username-parameter="id" 
				password-parameter="pw"		
				authentication-details-source-ref="customWebAuthenticationDetailsSource"
				login-processing-url		="/main/login/login_check"
				default-target-url			="/main/login/loginSuccess"
				authentication-failure-url	="/main/login/login?fail=true"
				authentication-success-handler-ref = "successHandler" 
				authentication-failure-handler-ref = "failHandler" 
				always-use-default-target='true' 
				/>

			<logout logout-url="/main/login/logout_check"
				logout-success-url="/main/login/logout"
				invalidate-session="true" />
			
					
			<!-- 20160217 추가 -->
			<access-denied-handler error-page="/common/access/denied"/> 
			<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="filterSecurityInterceptor"/>
		    <!-- 
			<session-management session-fixation-protection="none"/>
		    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		        <constructor-arg>
		            <list>
		                <bean class="org.springframework.security.access.vote.RoleVoter" />
		                <bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
		            </list>
		        </constructor-arg>
		    </bean>
		    <security:authentication-manager>
		        <security:authentication-provider>
		            <security:jdbc-user-service data-source-ref="dataSource"
		                users-by-username-query=
		                    "select username,password, status from users where username=?"
		                authorities-by-username-query=
		                    "select username, role from user_roles where username =?  " />
		        </security:authentication-provider>
		    </security:authentication-manager>
		     -->
		     
		
				
<!-- 			<session-management> -->
<!-- 				<concurrency-control max-sessions="1" expired-url="/main/login/login_duplicate"/> -->
<!-- 				<concurrency-control expired-url="/main/login/logout_check" /> -->
<!-- 			</session-management> -->
				
		</http>
		
		<!-- 20160217 인증 -->
		<!-- 
		<authentication-manager>
			<authentication-provider>
				<jdbc-user-service data-source-ref="dataSource"
					 users-by-username-query=
	                    "select username,password, status from users where username=?"
		             authorities-by-username-query=
		                    "select username, role from user_roles where username =?  "
				/>
			</authentication-provider>
		</authentication-manager>
		 -->
		<authentication-manager>
			<authentication-provider ref="loginProvider"/>
        </authentication-manager>		
		 
		<!-- 20160217 추가  -->
		<beans:bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		 	<beans:property name="authenticationManager" ref="org.springframework.security.authenticationManager" />
		 	<beans:property name="accessDecisionManager" ref="accessDecisionManager" />
		 	<beans:property name="securityMetadataSource" ref="reloadableFilterInvocationSecurityMetadataSource" />
		</beans:bean>
		<!-- 가지고 있는 voter 중 하나라도 매칭이 되면 권한을 허락해 준다. -->
	    <beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
	        <beans:property name="decisionVoters">
	            <beans:list>
	                <beans:bean class="org.springframework.security.access.vote.RoleVoter">
	                    <beans:property name="rolePrefix" value="ROLE_"/>
	                </beans:bean>
	                <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
	            </beans:list>
	        </beans:property>
	    </beans:bean>
	    
	    <beans:bean id="secureObjectDao" class="com.skcc.tqp.portal.common.dao.SecureObjectDao">
		 	<beans:property name="dataSource" ref="portal-dataSource" />
		 	<beans:property name="sqlRolesAndResources" value="
				 	  select									
						  a.menu_path as url,                 
						  B.Role_Id as auth                  
					  from menu_info a, Resources_Role b  
					  where 1=1                           
					  and A.Menu_Id = B.Resource_Id       
					  and a.use_yn = 'Y'                  
					  and a.del_yn = 'N'                  
					  order by sec_ord asc, url asc  
		 	" />
		</beans:bean>
		
   	    <beans:bean id="secureObjectService" class="com.skcc.tqp.portal.common.service.SecureObjectService">
		 	<beans:property name="secureObjectDao" ref="secureObjectDao" />
		</beans:bean>
		
   	    <beans:bean id="requestMap" class="com.skcc.tqp.portal.common.UrlResourceFactoryBean" init-method="init">
		 	<beans:property name="secureObjectService" ref="secureObjectService" />
		</beans:bean>
			
   	    <beans:bean id="reloadableFilterInvocationSecurityMetadataSource" class="com.skcc.tqp.portal.common.ReloadableFilterInvocationSecurityMetadataSource" >
   	    	<beans:constructor-arg ref="requestMap" />
		 	<beans:property name="secureObjectService" ref="secureObjectService" />
		</beans:bean>				
	    <!--  -->
    		
        
	 	<beans:bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>
	 	<beans:bean id="successHandler" class="com.skcc.tqp.portal.common.login.CustomAuthenticationSuccessHandler">
			<beans:property name="targetUrlParameter" value="loginRedirect" />
			<beans:property name="useReferer" value="false" />
			<beans:property name="defaultUrl" value="/main/login/loginSuccess" />
	 	</beans:bean>
	 	<beans:bean id="failHandler" class="com.skcc.tqp.portal.common.login.CustomAuthenticationFailureHandler">
	 		<beans:property name="defaultFailureUrl" value="/main/login/login?fail=true" />
	 	</beans:bean>
	 	

        
        <beans:bean id="loginProvider"  class="com.skcc.tqp.portal.main.service.LoginProvider" />
        
        <beans:bean id="customWebAuthenticationDetailsSource"  class="com.skcc.tqp.portal.common.login.CustomWebAuthenticationDetailsSource" />
    
</beans:beans>
